// EVM Interpreter Written in pure EVM assembly
//
// The bytecode is provided in the calldata, the code is interpreted, not deployed as a smart-contract.
//
// Motivation: Deploying a smart-contract is expensive, what if you just want to execute a tiny piece of
// custom logic, but without having to deploy a smart-contract? Then you can use this interpreter with delegatecall.
//
// This code is intended to be deployed in all networks using Universal Factory, also develop by the same author:
// https://github.com/analog-Labs/universal-factory
// 
// Tested on https://www.evm.codes/playground
// Source: https://github.com/analog-Labs/evm-interpreter
// 
// @author Lohann Paterno Coutinho Ferreira <developer@lohann.dev>
JUMPDEST // STOP 0x00

// Setup
// We use the memory size to know if this is a setup, or the STOP opcode being executed.
MSIZE
ISZERO
PUSH2 0x0e // JUMP to setup
JUMPI
CALLDATASIZE // calldatasize < pc
LT
PUSH2 0x1fc0 // JUMP to INVALID
JUMPI
STOP
JUMPDEST
// Set MSIZE to 32
PUSH0
PUSH0
MSTORE
PUSH0 // PC

// Load next opcode
JUMPDEST
DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH5 5
SHL
JUMP

// ADD 0x01
JUMPDEST
PUSH18 1
ADD
SWAP2
ADD
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// MUL 0x02
JUMPDEST
PUSH18 1
ADD
SWAP2
MUL
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SUB 0x03
JUMPDEST
PUSH17 1
ADD
SWAP2
SWAP1
SUB
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// DIV 0x04
JUMPDEST
PUSH17 1
ADD
SWAP2
SWAP1
DIV
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SDIV 0x05
JUMPDEST
PUSH17 1
ADD
SWAP2
SWAP1
DIV
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// MOD 0x06
JUMPDEST
PUSH17 1
ADD
SWAP2
SWAP1
MOD
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SMOD 0x07
JUMPDEST
PUSH17 1
ADD
SWAP2
SWAP1
SMOD
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// ADDMOD 0x08
JUMPDEST
PUSH17 1
ADD
SWAP3
SWAP2
ADDMOD
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// MULLMOD 0x09
JUMPDEST
PUSH17 1
ADD
SWAP3
SWAP2
MULMOD
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// EXP 0x0A
JUMPDEST
PUSH17 1
ADD
SWAP2
SWAP1
EXP
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SIGNEXTEND 0x0B
JUMPDEST
PUSH17 1
ADD
SWAP2
SWAP1
SIGNEXTEND
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// GAP
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0

// LT 0x10
JUMPDEST
PUSH18 1
ADD
SWAP2
GT
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// GT 0x11
JUMPDEST
PUSH18 1
ADD
SWAP2
LT
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SLT 0x12
JUMPDEST
PUSH18 1
ADD
SWAP2
SGT
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SGT 0x13
JUMPDEST
PUSH18 1
ADD
SWAP2
SLT
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// EQ 0x14
JUMPDEST
PUSH18 1
ADD
SWAP2
EQ
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// ISZERO 0x15
JUMPDEST
PUSH18 1
ADD
SWAP1
ISZERO
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// AND 0x16
JUMPDEST
PUSH18 1
ADD
SWAP2
AND
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// OR 0x17
JUMPDEST
PUSH18 1
ADD
SWAP2
OR
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// OR 0x18
JUMPDEST
PUSH18 1
ADD
SWAP2
XOR
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// NOT 0x19
JUMPDEST
PUSH18 1
ADD
SWAP1
NOT
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// BYTE 0x1A
JUMPDEST
PUSH17 1
ADD
SWAP2
SWAP1
BYTE
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SHL 0x1B
JUMPDEST
PUSH17 1
ADD
SWAP2
SWAP1
SHL
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SHR 0x1C
JUMPDEST
PUSH17 1
ADD
SWAP2
SWAP1
SHR
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SHR 0x1D
JUMPDEST
PUSH17 1
ADD
SWAP2
SWAP1
SAR
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// <Unknown> 0x1E
JUMPDEST
INVALID
STOP
PUSH28 0

// <Unknown> 0x1F
JUMPDEST
INVALID
STOP
PUSH28 0

// KECCAK256 0x20
JUMPDEST
PUSH17 1
ADD
SWAP2
SWAP1
KECCAK256
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// <Unknown> 0x21
JUMPDEST
INVALID
STOP
PUSH28 0

// <Unknown> 0x22
JUMPDEST
INVALID
STOP
PUSH28 0

// <Unknown> 0x23
JUMPDEST
INVALID
STOP
PUSH28 0

// <Unknown> 0x24
JUMPDEST
INVALID
STOP
PUSH28 0

// <Unknown> 0x25
JUMPDEST
INVALID
STOP
PUSH28 0

// <Unknown> 0x26
JUMPDEST
INVALID
STOP
PUSH28 0

// <Unknown> 0x27
JUMPDEST
INVALID
STOP
PUSH28 0

// <Unknown> 0x28
JUMPDEST
INVALID
STOP
PUSH28 0

// <Unknown> 0x29
JUMPDEST
INVALID
STOP
PUSH28 0

// <Unknown> 0x2a
JUMPDEST
INVALID
STOP
PUSH28 0

// <Unknown> 0x2b
JUMPDEST
INVALID
STOP
PUSH28 0

// <Unknown> 0x2c
JUMPDEST
INVALID
STOP
PUSH28 0

// <Unknown> 0x2d
JUMPDEST
INVALID
STOP
PUSH28 0

// <Unknown> 0x2e
JUMPDEST
INVALID
STOP
PUSH28 0

// <Unknown> 0x2f
JUMPDEST
INVALID
STOP
PUSH28 0

// ADDRESS 0x30
JUMPDEST
PUSH19 1
ADD
ADDRESS
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// BALANCE 0x31
JUMPDEST
PUSH18 1
ADD
SWAP1
BALANCE
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// ORIGIN 0x32
JUMPDEST
PUSH19 1
ADD
ORIGIN
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// CALLER 0x33
JUMPDEST
PUSH19 1
ADD
CALLER
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// CALLVALUE 0x34
JUMPDEST
PUSH19 1
ADD
CALLVALUE
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// CALLDATALOAD 0x35
JUMPDEST
PUSH18 1
ADD
PUSH0
SWAP2
// CALLDATALOAD calldata is empty
POP

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// CALLDATASIZE 0x36
JUMPDEST
PUSH19 1
ADD
PUSH0
// CALLDATASIZE is empty
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// CALLDATACOPY 0x37
JUMPDEST
PUSH15 1
ADD
SWAP3
SWAP2
// Copy empty calldata
POP
CALLDATASIZE
SWAP1
CALLDATACOPY

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// CODESIZE 0x38
JUMPDEST
PUSH19 1
ADD
// CODESIZE
CALLDATASIZE // The code is the calldata
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// CODECOPY 0x39
JUMPDEST
PUSH17 1
ADD
SWAP3
SWAP2
SWAP1
// CODECOPY
CALLDATACOPY // The code is in the calldata

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// GASPRICE 0x3A
JUMPDEST
PUSH19 1
ADD
GASPRICE
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// EXTCODESIZE 0x3B
JUMPDEST
PUSH18 1
ADD
SWAP1
EXTCODESIZE
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// EXTCODECOPY 0x3C
JUMPDEST
PUSH16 1
ADD
SWAP4
SWAP3
SWAP2
SWAP1
EXTCODECOPY

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// RETURNDATASIZE 0x3D
JUMPDEST
PUSH19 1
ADD
RETURNDATASIZE
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// RETURNDATACOPY 0x3E
JUMPDEST
PUSH17 1
ADD
SWAP3
SWAP2
SWAP1
RETURNDATACOPY

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// EXTCODEHASH 0x3F
JUMPDEST
PUSH18 1
ADD
SWAP1
EXTCODEHASH
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// BLOCKHASH 0x40
JUMPDEST
PUSH18 1
ADD
SWAP1
BLOCKHASH
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// COINBASE 0x41
JUMPDEST
PUSH19 1
ADD
COINBASE
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// TIMESTAMP 0x42
JUMPDEST
PUSH19 1
ADD
TIMESTAMP
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// NUMBER 0x43
JUMPDEST
PUSH19 1
ADD
NUMBER
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// PREVRANDAO 0x44
JUMPDEST
PUSH19 1
ADD
PREVRANDAO
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// GASLIMIT 0x45
JUMPDEST
PUSH19 1
ADD
GASLIMIT
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// CHAINID 0x46
JUMPDEST
PUSH19 1
ADD
CHAINID
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SELFBALANCE 0x47
JUMPDEST
PUSH19 1
ADD
SELFBALANCE
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// BASEFEE 0x48
JUMPDEST
PUSH19 1
ADD
BASEFEE
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// BLOBHASH 0x49
JUMPDEST
PUSH18 1
ADD
SWAP1
BLOBHASH
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// BLOBBASEFEE 0x4A
JUMPDEST
PUSH19 1
ADD
BLOBBASEFEE
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// <Unknown> 0x4B
JUMPDEST
INVALID
STOP
PUSH28 0

// <Unknown> 0x4C
JUMPDEST
INVALID
STOP
PUSH28 0

// <Unknown> 0x4D
JUMPDEST
INVALID
STOP
PUSH28 0

// <Unknown> 0x4E
JUMPDEST
INVALID
STOP
PUSH28 0

// <Unknown> 0x4F
JUMPDEST
INVALID
STOP
PUSH28 0

// POP 0x50
JUMPDEST
PUSH19 1
ADD
SWAP1
POP

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// MLOAD 0x51
JUMPDEST
PUSH18 1
ADD
SWAP1
MLOAD
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// MSTORE 0x52
JUMPDEST
PUSH18 1
ADD
SWAP2
SWAP1
MSTORE

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// MSTORE8 0x53
JUMPDEST
PUSH18 1
ADD
SWAP2
SWAP1
MSTORE8

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SLOAD 0x54
JUMPDEST
PUSH18 1
ADD
SWAP1
SLOAD
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SSTORE 0x55
JUMPDEST
PUSH18 1
ADD
SWAP2
SWAP1
SSTORE

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// JUMP 0x56
JUMPDEST
POP
DUP1
PUSH14 1
ADD
SWAP1

CALLDATALOAD
PUSH1 0xf0
SHR
PUSH2 0x5b00
XOR
PUSH1 0x05
SHL
JUMP

// JUMPI 0x57
JUMPDEST
SWAP1
SWAP2
PUSH14 0x0000000000000000000000000ac0
JUMPI
SWAP1
POP
PUSH1 0x01
ADD

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 0x05
SHL
JUMP

// PC 0x58
JUMPDEST
DUP1
PUSH20 1
ADD

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// MSIZE 0x59
JUMPDEST
PUSH19 1
ADD
MSIZE
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// GAS 0x5A
JUMPDEST
PUSH19 1
ADD
GAS
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// JUMPDEST 0x5B
JUMPDEST
PUSH21 1
ADD

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// TLOAD 0x5C
JUMPDEST
PUSH18 1
ADD
SWAP1
TLOAD
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// TSTORE 0x5D
JUMPDEST
PUSH18 1
ADD
SWAP2
SWAP1
TSTORE

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// MCOPY 0x5E
JUMPDEST
PUSH17 1
ADD
SWAP3
SWAP2
SWAP1
MCOPY

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// PUSH0 0x5F
JUMPDEST
PUSH19 1
ADD
PUSH0
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// PUSH1 0x60
JUMPDEST
DUP1
CALLDATALOAD
DUP1
PUSH14 1
BYTE
SWAP2
PUSH1 2
ADD
SWAP1
PUSH1 2
BYTE
PUSH1 5
SHL
JUMP

// PUSH2 0x61
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 240
SHR
SWAP2
PUSH1 2
ADD
SWAP1
PUSH1 2
BYTE
PUSH1 5
SHL
JUMP

// PUSH3 0x62
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 232
SHR
SWAP2
PUSH1 3
ADD
SWAP1
PUSH1 3
BYTE
PUSH1 5
SHL
JUMP

// PUSH4 0x63
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 224
SHR
SWAP2
PUSH1 4
ADD
SWAP1
PUSH1 4
BYTE
PUSH1 5
SHL
JUMP

// PUSH5 0x64
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 216
SHR
SWAP2
PUSH1 5
ADD
SWAP1
PUSH1 5
BYTE
PUSH1 5
SHL
JUMP

// PUSH6 0x65
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 208
SHR
SWAP2
PUSH1 6
ADD
SWAP1
PUSH1 6
BYTE
PUSH1 5
SHL
JUMP

// PUSH7 0x66
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 200
SHR
SWAP2
PUSH1 7
ADD
SWAP1
PUSH1 7
BYTE
PUSH1 5
SHL
JUMP

// PUSH8 0x67
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 192
SHR
SWAP2
PUSH1 8
ADD
SWAP1
PUSH1 8
BYTE
PUSH1 5
SHL
JUMP

// PUSH9 0x68
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 184
SHR
SWAP2
PUSH1 9
ADD
SWAP1
PUSH1 9
BYTE
PUSH1 5
SHL
JUMP

// PUSH10 0x69
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 176
SHR
SWAP2
PUSH1 10
ADD
SWAP1
PUSH1 10
BYTE
PUSH1 5
SHL
JUMP

// PUSH11 0x6A
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 168
SHR
SWAP2
PUSH1 11
ADD
SWAP1
PUSH1 11
BYTE
PUSH1 5
SHL
JUMP

// PUSH12 0x6B
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 160
SHR
SWAP2
PUSH1 12
ADD
SWAP1
PUSH1 12
BYTE
PUSH1 5
SHL
JUMP

// PUSH13 0x6C
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 152
SHR
SWAP2
PUSH1 13
ADD
SWAP1
PUSH1 13
BYTE
PUSH1 5
SHL
JUMP

// PUSH14 0x6D
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 144
SHR
SWAP2
PUSH1 14
ADD
SWAP1
PUSH1 14
BYTE
PUSH1 5
SHL
JUMP

// PUSH15 0x6E
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 136
SHR
SWAP2
PUSH1 15
ADD
SWAP1
PUSH1 15
BYTE
PUSH1 5
SHL
JUMP

// PUSH16 0x6F
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 128
SHR
SWAP2
PUSH1 16
ADD
SWAP1
PUSH1 16
BYTE
PUSH1 5
SHL
JUMP

// PUSH17 0x70
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 120
SHR
SWAP2
PUSH1 17
ADD
SWAP1
PUSH1 17
BYTE
PUSH1 5
SHL
JUMP

// PUSH18 0x71
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 112
SHR
SWAP2
PUSH1 18
ADD
SWAP1
PUSH1 18
BYTE
PUSH1 5
SHL
JUMP

// PUSH19 0x72
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 104
SHR
SWAP2
PUSH1 19
ADD
SWAP1
PUSH1 19
BYTE
PUSH1 5
SHL
JUMP

// PUSH20 0x73
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 96
SHR
SWAP2
PUSH1 20
ADD
SWAP1
PUSH1 20
BYTE
PUSH1 5
SHL
JUMP

// PUSH21 0x74
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 88
SHR
SWAP2
PUSH1 21
ADD
SWAP1
PUSH1 21
BYTE
PUSH1 5
SHL
JUMP

// PUSH22 0x75
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 80
SHR
SWAP2
PUSH1 22
ADD
SWAP1
PUSH1 22
BYTE
PUSH1 5
SHL
JUMP

// PUSH23 0x76
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 72
SHR
SWAP2
PUSH1 23
ADD
SWAP1
PUSH1 23
BYTE
PUSH1 5
SHL
JUMP

// PUSH24 0x77
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 64
SHR
SWAP2
PUSH1 24
ADD
SWAP1
PUSH1 24
BYTE
PUSH1 5
SHL
JUMP

// PUSH25 0x78
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 56
SHR
SWAP2
PUSH1 25
ADD
SWAP1
PUSH1 25
BYTE
PUSH1 5
SHL
JUMP

// PUSH26 0x79
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 48
SHR
SWAP2
PUSH1 26
ADD
SWAP1
PUSH1 26
BYTE
PUSH1 5
SHL
JUMP

// PUSH27 0x7A
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 40
SHR
SWAP2
PUSH1 27
ADD
SWAP1
PUSH1 27
BYTE
PUSH1 5
SHL
JUMP

// PUSH28 0x7B
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 32
SHR
SWAP2
PUSH1 28
ADD
SWAP1
PUSH1 28
BYTE
PUSH1 5
SHL
JUMP

// PUSH29 0x7C
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 24
SHR
SWAP2
PUSH1 29
ADD
SWAP1
PUSH1 29
BYTE
PUSH1 5
SHL
JUMP

// PUSH30 0x7D
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 16
SHR
SWAP2
PUSH1 30
ADD
SWAP1
PUSH1 30
BYTE
PUSH1 5
SHL
JUMP

// PUSH31 0x7E
JUMPDEST
PUSH11 1
ADD
DUP1
CALLDATALOAD
DUP1
PUSH1 8
SHR
SWAP2
PUSH1 31
ADD
SWAP1
PUSH1 31
BYTE
PUSH1 5
SHL
JUMP

// PUSH32 0x7F
JUMPDEST
PUSH15 1
ADD
DUP1
CALLDATALOAD
SWAP1
PUSH1 32
ADD

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// DUP1 0x80
JUMPDEST
PUSH19 1
ADD
DUP2
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// DUP2 0x81
JUMPDEST
PUSH19 1
ADD
DUP3
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// DUP3 0x82
JUMPDEST
PUSH19 1
ADD
DUP4
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// DUP4 0x83
JUMPDEST
PUSH19 1
ADD
DUP5
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// DUP5 0x84
JUMPDEST
PUSH19 1
ADD
DUP6
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// DUP6 0x85
JUMPDEST
PUSH19 1
ADD
DUP7
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// DUP7 0x86
JUMPDEST
PUSH19 1
ADD
DUP8
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// DUP8 0x87
JUMPDEST
PUSH19 1
ADD
DUP9
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// DUP9 0x88
JUMPDEST
PUSH19 1
ADD
DUP10
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// DUP10 0x89
JUMPDEST
PUSH19 1
ADD
DUP11
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// DUP11 0x8A
JUMPDEST
PUSH19 1
ADD
DUP12
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// DUP12 0x8B
JUMPDEST
PUSH19 1
ADD
DUP13
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// DUP13 0x8C
JUMPDEST
PUSH19 1
ADD
DUP14
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// DUP14 0x8D
JUMPDEST
PUSH19 1
ADD
DUP15
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// DUP15 0x8E
JUMPDEST
PUSH19 1
ADD
DUP16
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// DUP16 0x8F
JUMPDEST
PUSH1 1
ADD
PUSH1 32
DUP1
MSIZE
SUB
MLOAD
ISZERO
MUL
MSIZE
SUB
MSTORE // Store the pc in MSIZE or MSIZE - 20
DUP16
PUSH1 32
MSIZE
SUB
DUP1
MLOAD
SWAP1
PUSH0
SWAP1
MSTORE

PUSH4 0x13
JUMP

// SWAP1 0x90
JUMPDEST
PUSH18 1
ADD
SWAP1
SWAP2
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SWAP2 0x91
JUMPDEST
PUSH18 1
ADD
SWAP1
SWAP3
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SWAP3 0x92
JUMPDEST
PUSH18 1
ADD
SWAP1
SWAP4
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SWAP4 0x93
JUMPDEST
PUSH18 1
ADD
SWAP1
SWAP5
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SWAP5 0x94
JUMPDEST
PUSH18 1
ADD
SWAP1
SWAP6
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SWAP6 0x95
JUMPDEST
PUSH18 1
ADD
SWAP1
SWAP7
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SWAP7 0x96
JUMPDEST
PUSH18 1
ADD
SWAP1
SWAP8
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SWAP8 0x97
JUMPDEST
PUSH18 1
ADD
SWAP1
SWAP9
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SWAP9 0x98
JUMPDEST
PUSH18 1
ADD
SWAP1
SWAP10
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SWAP10 0x99
JUMPDEST
PUSH18 1
ADD
SWAP1
SWAP11
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SWAP11 0x9A
JUMPDEST
PUSH18 1
ADD
SWAP1
SWAP12
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SWAP12 0x9B
JUMPDEST
PUSH18 1
ADD
SWAP1
SWAP13
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SWAP13 0x9C
JUMPDEST
PUSH18 1
ADD
SWAP1
SWAP14
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SWAP14 0x9D
JUMPDEST
PUSH18 1
ADD
SWAP1
SWAP15
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SWAP15 0x9E
JUMPDEST
PUSH18 1
ADD
SWAP1
SWAP16
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// SWAP16 0x9F
JUMPDEST
PUSH1 1
ADD
PUSH1 32
DUP1
MSIZE
SUB
MLOAD
ISZERO
MUL
MSIZE
SUB
MSTORE // Store the pc in MSIZE or MSIZE - 20
SWAP16
PUSH1 32
MSIZE
SUB
DUP1
MLOAD
SWAP1
PUSH0
SWAP1
MSTORE

PUSH4 0x13
JUMP

// LOG0 0xA0
JUMPDEST
PUSH18 1
ADD
SWAP2
SWAP1
LOG0

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// LOG1 0xA1
JUMPDEST
PUSH17 1
ADD
SWAP3
SWAP2
SWAP1
LOG1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// LOG2 0xA2
JUMPDEST
PUSH16 1
ADD
SWAP4
SWAP3
SWAP2
SWAP1
LOG2

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// LOG3 0xA3
JUMPDEST
PUSH15 1
ADD
SWAP5
SWAP4
SWAP3
SWAP2
SWAP1
LOG3

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// LOG4 0xA4
JUMPDEST
PUSH14 1
ADD
SWAP6
SWAP5
SWAP4
SWAP3
SWAP2
SWAP1
LOG4

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// GAP
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0

// CREATE 0xF0
JUMPDEST
PUSH16 1
ADD
SWAP3
SWAP2
SWAP1
CREATE
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// CALL 0xF1
JUMPDEST
PUSH12 1
ADD
SWAP7
SWAP6
SWAP5
SWAP4
SWAP3
SWAP2
SWAP1
CALL
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// CALLCODE 0xF2
JUMPDEST
PUSH12 1
ADD
SWAP7
SWAP6
SWAP5
SWAP4
SWAP3
SWAP2
SWAP1
CALLCODE
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// RETURN 0xF3
JUMPDEST
POP
RETURN
PUSH27 0
INVALID

// DELEGATECALL 0xF4
JUMPDEST
PUSH2 0x1e88 // return ptr
PUSH2 0x1fec // guard ptr
JUMP
JUMPDEST
PUSH5 1
ADD
SWAP6
SWAP5
SWAP4
SWAP3
SWAP2
SWAP1
DELEGATECALL
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// CREATE2 0xF5
JUMPDEST
PUSH15 1
ADD
SWAP4
SWAP3
SWAP2
SWAP1
CREATE2
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// GAP
PUSH31 0
PUSH31 0
PUSH31 0
PUSH31 0

// STATICCALL 0xFA
JUMPDEST
PUSH13 1
ADD
SWAP6
SWAP5
SWAP4
SWAP3
SWAP2
SWAP1
STATICCALL
SWAP1

DUP1
CALLDATALOAD
PUSH0
BYTE
PUSH1 5
SHL
JUMP

// GAP
PUSH31 0
PUSH31 0

// REVERT 0xFD
JUMPDEST
POP
REVERT
PUSH27 0
INVALID

// INVALID 0xFE
JUMPDEST
INVALID
PUSH29 0

// SELFDESTRUCT 0xFF
// OBS: Only allowed when using delegatecall
JUMPDEST
PUSH2 0x1fe8 // return ptr
PUSH2 0x1fec // guard ptr
JUMP
JUMPDEST
POP
SELFDESTRUCT
STOP

// Guard to prevent an instruction who can potentialy
// destroy this contract from being executed.
JUMPDEST
ADDRESS
// !REPLACE THIS BY THE ADDRESS OF THE CONTRACT!
PUSH20 0x0000000000000000000000000000000000000000
EQ
PUSH2 0x2009
JUMPI
JUMP
JUMPDEST
INVALID